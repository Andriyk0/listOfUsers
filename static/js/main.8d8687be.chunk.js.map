{"version":3,"sources":["store/index.ts","components/Header/Header.tsx","api/api.tsx","store/selectors.ts","components/Alboms/Alboms.tsx","components/Users/Users.tsx","components/Posts/Posts.tsx","App.tsx","index.tsx"],"names":["ActionType","Header","className","API","getUsers","a","fetch","response","json","getUserPosts","id","getUserAlboms","initialState","users","userPosts","userAlboms","selectUser","undefined","setUsers","createAction","SET_USERS","setUserPosts","SET_USER_POSTS","setUserAlboms","SET_USER_ALBOMS","setSelectUser","SET_SELECT_USER","reducer","createReducer","builder","addCase","state","action","payload","store","configureStore","getUsersFromStore","getUserPostsFromStore","getUserAlbomsFromStore","getSelectedUser","Alboms","dispatch","useDispatch","useSelector","selectedUser","aria-hidden","onClick","username","map","albom","i","title","Users","dispatsh","usersAlbum","useEffect","alert","loadUsersFromServer","loadUserAlbomsFromServer","loadUserPostsFromServer","length","user","name","email","address","city","street","to","type","showPosts","showAlbums","Posts","posts","post","App","path","element","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d8687be.chunk.js","sourcesContent":["import { createAction, createReducer, configureStore } from '@reduxjs/toolkit';\n\n// eslint-disable-next-line no-shadow\nenum ActionType {\n  SET_USERS = 'SET_USERS',\n  SET_USER_POSTS = 'SET_USER_POSTS',\n  SET_USER_ALBOMS = 'SET_USER_ALBOMS',\n  SET_SELECT_USER = 'SET_SELECT_USER',\n}\n\nconst initialState:State = {\n  users: [],\n  userPosts: [],\n  userAlboms: [],\n  selectUser: undefined,\n};\n\nexport const setUsers = createAction<User[]>(ActionType.SET_USERS);\nexport const setUserPosts = createAction<Post[]>(ActionType.SET_USER_POSTS);\nexport const setUserAlboms = createAction<Album[]>(ActionType.SET_USER_ALBOMS);\nexport const setSelectUser = createAction<User>(ActionType.SET_SELECT_USER);\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder.addCase(setUsers, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.users = action.payload;\n  });\n\n  builder.addCase(setUserPosts, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.userPosts = action.payload;\n  });\n\n  builder.addCase(setUserAlboms, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.userAlboms = action.payload;\n  });\n\n  builder.addCase(setSelectUser, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.selectUser = action.payload;\n  });\n});\n\nexport const store = configureStore({\n  reducer,\n});\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <div className=\"header\">List of Users</div>\n  );\n};\n","const API = 'https://jsonplaceholder.typicode.com/';\n\nexport const getUsers = async () => {\n  const response = await fetch(`${API}users`);\n\n  return response.json();\n};\n\nexport const getUserPosts = async (id:number) => {\n  const response = await fetch(`${API}posts?userId=${id}`);\n\n  return response.json();\n};\n\nexport const getUserAlboms = async (id:number) => {\n  const response = await fetch(`${API}albums?userId=${id}`);\n\n  return response.json();\n};\n","export const getUsersFromStore = (state:State) => state.users;\nexport const getUserPostsFromStore = (state:State) => state.userPosts;\nexport const getUserAlbomsFromStore = (state:State) => state.userAlboms;\nexport const getSelectedUser = (state:State) => state.selectUser;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectUser, setUserAlboms } from '../../store';\nimport { getSelectedUser, getUserAlbomsFromStore } from '../../store/selectors';\nimport './Alboms.scss';\n\nexport const Alboms: React.FC = () => {\n  const dispatch = useDispatch();\n  const userAlboms = useSelector(getUserAlbomsFromStore);\n  const selectedUser = useSelector(getSelectedUser);\n\n  const closeAlbums = () => {\n    dispatch(setUserAlboms([]));\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    dispatch(setSelectUser(undefined!));\n  };\n\n  return (\n    <div\n      className=\"album__container\"\n      aria-hidden=\"true\"\n      onClick={closeAlbums}\n    >\n      <div className=\"album\">\n        <p className=\"album__user_name\">{`${selectedUser?.username} albums`}</p>\n        {\n          userAlboms.map((albom:Album, i: number) => (\n            <p key={albom.id}>{`${i + 1}. ${albom.title}`}</p>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getUserAlboms, getUserPosts, getUsers } from '../../api/api';\nimport {\n  setSelectUser, setUserAlboms, setUserPosts, setUsers,\n} from '../../store';\nimport { getUserAlbomsFromStore, getUsersFromStore } from '../../store/selectors';\nimport { Alboms } from '../Alboms';\nimport './Users.scss';\n\nexport const Users: React.FC = () => {\n  const dispatsh = useDispatch();\n  const users = useSelector(getUsersFromStore);\n  const usersAlbum = useSelector(getUserAlbomsFromStore);\n\n  useEffect(() => {\n    const loadUsersFromServer = async () => {\n      try {\n        const response = await getUsers();\n\n        dispatsh(setUsers(response));\n      } catch (error) {\n        // eslint-disable-next-line no-alert\n        alert('Error try again');\n      }\n    };\n\n    loadUsersFromServer();\n  }, []);\n\n  const loadUserAlbomsFromServer = async (id: number) => {\n    try {\n      const response = await getUserAlboms(id);\n\n      dispatsh(setUserAlboms(response));\n    } catch (error) {\n      // eslint-disable-next-line no-alert\n      alert('Error try later');\n    }\n  };\n\n  const loadUserPostsFromServer = async (id: number) => {\n    try {\n      const response = await getUserPosts(id);\n\n      dispatsh(setUserPosts(response));\n    } catch (error) {\n      // eslint-disable-next-line no-alert\n      alert('Error try later');\n    }\n  };\n\n  const showPosts = (id:number, user:User) => {\n    loadUserPostsFromServer(id);\n    dispatsh(setSelectUser(user));\n  };\n\n  const showAlbums = (id:number, user:User) => {\n    loadUserAlbomsFromServer(id);\n    dispatsh(setSelectUser(user));\n  };\n\n  return (\n    <div className=\"users\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th><abbr title=\"Position\">Pos</abbr></th>\n            <th><abbr title=\"FullName\">Full Name</abbr></th>\n            <th><abbr title=\"UserName\">User Name</abbr></th>\n            <th><abbr title=\"Email\">Email</abbr></th>\n            <th><abbr title=\"City\">City</abbr></th>\n            <th><abbr title=\"Street\">Street</abbr></th>\n            <th><abbr title=\"Posts\">Posts</abbr></th>\n            <th><abbr title=\"Alboms\">Alboms</abbr></th>\n          </tr>\n        </thead>\n        <tfoot>\n          <tr>\n            <th><abbr title=\"Position\">Pos</abbr></th>\n            <th><abbr title=\"FullName\">Full Name</abbr></th>\n            <th><abbr title=\"UserName\">User Name</abbr></th>\n            <th><abbr title=\"Email\">Email</abbr></th>\n            <th><abbr title=\"City\">City</abbr></th>\n            <th><abbr title=\"Street\">Street</abbr></th>\n            <th><abbr title=\"Posts\">Posts</abbr></th>\n            <th><abbr title=\"Alboms\">Alboms</abbr></th>\n          </tr>\n        </tfoot>\n        <tbody>\n          {users.length === 0 && (\n            <tr>\n              <td>Loading...</td>\n            </tr>\n          )}\n          {users.map((user:User, i) => (\n            <tr key={user.id}>\n              <th>{i + 1}</th>\n              <td>{user.name}</td>\n              <td>{user.username}</td>\n              <td>{user.email}</td>\n              <td>{user.address.city}</td>\n              <td>{user.address.street}</td>\n              <td>\n                <Link className=\"user__link\" to=\"posts\">\n                  <button\n                    type=\"button\"\n                    className=\"button is-primary is-light\"\n                    onClick={() => showPosts(user.id, user)}\n                  >\n                    Show Posts\n                  </button>\n                </Link>\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"button is-success is-light\"\n                  onClick={() => showAlbums(user.id, user)}\n                >\n                  Show Albums\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {usersAlbum.length !== 0 && (\n        <Alboms />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getSelectedUser, getUserPostsFromStore } from '../../store/selectors';\nimport './Posts.scss';\n\nexport const Posts: React.FC = () => {\n  const posts = useSelector(getUserPostsFromStore);\n  const selectedUser = useSelector(getSelectedUser);\n\n  return (\n    <div\n      className=\"posts__container\"\n    >\n      <div className=\"posts\">\n        <p className=\"posts__user_name\">{`${selectedUser?.username} posts`}</p>\n        {\n          posts.map((post:Post, i: number) => (\n            <p key={post.id}>{`${i + 1}. ${post.title}`}</p>\n          ))\n        }\n        <Link to=\"/\">\n          <button type=\"button\" className=\"button is-danger\">\n            Go to Users\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Users } from './components/Users';\nimport { Posts } from './components/Posts/Posts';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<Users />} />\n        <Route path=\"/users\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/posts\" element={<Posts />} />\n      </Routes>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { store } from './store';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}